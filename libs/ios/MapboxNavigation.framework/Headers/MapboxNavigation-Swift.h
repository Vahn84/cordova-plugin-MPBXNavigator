// Generated by Apple Swift version 3.1 (swiftlang-802.0.53 clang-802.0.42)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if defined(__has_attribute) && __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
@import UIKit;
@import CoreGraphics;
@import CoreLocation;
@import Mapbox;
@import Pulley;
@import MapboxCoreNavigation;
@import MapboxDirections;
@import ObjectiveC;
@import AVFoundation;
@import AWSCore;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

@interface NSBundle (SWIFT_EXTENSION(MapboxNavigation))
@end

@class NSCoder;

SWIFT_CLASS_NAMED("StylableButton")
@interface MBStylableButton : UIButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// <code>MBButton</code> sets the tintColor according to the style.
SWIFT_CLASS_NAMED("Button")
@interface MBButton : MBStylableButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface CLLocation (SWIFT_EXTENSION(MapboxNavigation))
@end


SWIFT_CLASS_NAMED("StylableLabel")
@interface MBStylableLabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CellSubtitleLabel")
@interface MBCellSubtitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("CellTitleLabel")
@interface MBCellTitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LineView")
@interface MBLineView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("DashedLineView")
@interface MBDashedLineView : MBLineView
@property (nonatomic) CGFloat dashedLength;
@property (nonatomic) CGFloat dashedGap;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// Provides appropriately formatted, localized descriptions of linear distances.
SWIFT_CLASS_NAMED("DistanceFormatter")
@interface MBDistanceFormatter : NSLengthFormatter
- (nonnull instancetype)initWithApproximate:(BOOL)approximate forVoiceUse:(BOOL)forVoiceUse OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)decoder OBJC_DESIGNATED_INITIALIZER;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
- (NSString * _Nonnull)stringFrom:(CLLocationDistance)distance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


/// <code>MBHighlightedButton</code> sets the buttonâ€™s titleColor for normal control state
/// according to the style in addition to the styling behavior inherited from
/// <code>MBButton</code>.
SWIFT_CLASS_NAMED("HighlightedButton")
@interface MBHighlightedButton : MBButton
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@interface MGLMapView (SWIFT_EXTENSION(MapboxNavigation))
@property (nonatomic) BOOL showsTraffic;
@end


@interface MGLVectorSource (SWIFT_EXTENSION(MapboxNavigation))
@end

@protocol NavigationMapViewDelegate;
@class CLLocationManager;
@class MBRoute;

SWIFT_CLASS_NAMED("NavigationMapView")
@interface MBNavigationMapView : MGLMapView
@property (nonatomic, weak) id <NavigationMapViewDelegate> _Nullable navigationMapDelegate;
- (void)locationManager:(CLLocationManager * _Null_unspecified)manager didUpdateLocations:(NSArray<CLLocation *> * _Null_unspecified)locations;
/// Adds or updates both the route line and the route line casing
- (void)showRoute:(MBRoute * _Nonnull)route;
/// Removes route line and route line casing from map
- (void)removeRoute;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame styleURL:(NSURL * _Nullable)styleURL OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MGLSource;
@class MGLStyleLayer;
@class MGLShape;

SWIFT_PROTOCOL("_TtP16MapboxNavigation25NavigationMapViewDelegate_")
@protocol NavigationMapViewDelegate
@optional
- (CLLocation * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shouldUpdateTo:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView simplifiedShapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
@end

@class UIViewController;

SWIFT_CLASS_NAMED("NavigationPulleyViewController")
@interface MBNavigationPulleyViewController : PulleyViewController
- (nonnull instancetype)initWithContentViewController:(UIViewController * _Nonnull)contentViewController drawerViewController:(UIViewController * _Nonnull)drawerViewController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol MGLAnnotation;
@class MBDirections;
@class MGLMapCamera;
@protocol MBNavigationViewControllerDelegate;
@class MBRouteVoiceController;
@class MBRouteController;
@class UIStoryboardSegue;

/// <code>NavigationViewController</code> is fully featured, turn by turn navigation UI.
/// It provides step by step instructions, an overview of all steps
/// for the given route and support for basic styling.
SWIFT_CLASS_NAMED("NavigationViewController")
@interface MBNavigationViewController : MBNavigationPulleyViewController
@property (nonatomic, strong) MBRoute * _Null_unspecified route;
/// \code
/// `destination` is an instance of `MGLAnnotation` that will be showned on
/// on the destination of your route. The last coordinate of the route will be
/// used if no destination is given.
///
/// \endcode
@property (nonatomic, strong) id <MGLAnnotation> _Null_unspecified destination;
/// <code>directions</code> is an instance of <code>Directions</code> need for rerouting.
/// See <a href="https://github.com/mapbox/MapboxDirections.swift">MapboxDirections.swift</a>
/// for further information.
@property (nonatomic, strong) MBDirections * _Null_unspecified directions;
/// <code>pendingCamera</code> is an optional <code>MGLMapCamera</code> you can use to improve
/// the initial transition from a previous viewport and prevent a trigger
/// from an excessive significant location update.
@property (nonatomic, strong) MGLMapCamera * _Nullable pendingCamera;
/// <code>origin</code> is an instance of <code>MGLAnnotation</code> representing the origin of your route.
@property (nonatomic, strong) id <MGLAnnotation> _Nullable origin;
/// The receiverâ€™s delegate.
@property (nonatomic, strong) id <MBNavigationViewControllerDelegate> _Nullable navigationDelegate;
/// <code>voiceController</code> provides access to various speech synthesizer options.
/// See <code>RouteVoiceController</code> for more information.
@property (nonatomic, strong) MBRouteVoiceController * _Nullable voiceController;
/// <code>routeController</code> provides all routing logic for the user.
/// See <code>RouteController</code> for more information
@property (nonatomic, strong) MBRouteController * _Null_unspecified routeController;
/// <code>simulate</code> provides simulated location updates along the given route.
@property (nonatomic) BOOL simulatesLocationUpdates;
/// <code>mapView</code> provides access to the navigationâ€™s <code>MGLMapView</code> with all its styling capabilities.
/// Note that you should not change the <code>mapView</code>â€™s delegate.
@property (nonatomic, readonly, strong) MGLMapView * _Nullable mapView;
/// <code>sendNotifications</code> toggle sending of UILocalNotification upon upcoming
/// steps when application is in the background.
@property (nonatomic) BOOL sendNotifications;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithContentViewController:(UIViewController * _Nonnull)contentViewController drawerViewController:(UIViewController * _Nonnull)drawerViewController OBJC_DESIGNATED_INITIALIZER;
/// Initializes a <code>NavigationViewController</code> that provides turn by turn navigation
/// for the given route. A optional <code>direction</code> object is needed for  potential
/// rerouting.
/// See <a href="https://github.com/mapbox/MapboxDirections.swift">MapboxDirections.swift</a>
/// for further information.
- (nonnull instancetype)initWithRoute:(MBRoute * _Nonnull)route directions:(MBDirections * _Nonnull)directions OBJC_DESIGNATED_INITIALIZER;
- (void)prepareForSegue:(UIStoryboardSegue * _Nonnull)segue sender:(id _Nullable)sender;
- (void)viewDidLoad;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
@end


@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation))
@end


@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation)) <PulleyDelegate>
- (void)drawerPositionDidChangeWithDrawer:(PulleyViewController * _Nonnull)drawer;
@end


@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation))
@end


@interface MBNavigationViewController (SWIFT_EXTENSION(MapboxNavigation)) <MBRouteControllerDelegate>
- (BOOL)routeController:(MBRouteController * _Nonnull)routeController shouldRerouteFromLocation:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
- (void)routeController:(MBRouteController * _Nonnull)routeController willRerouteFromLocation:(CLLocation * _Nonnull)location;
- (void)routeController:(MBRouteController * _Nonnull)routeController didRerouteAlongRoute:(MBRoute * _Nonnull)route;
- (void)routeController:(MBRouteController * _Nonnull)routeController didFailToRerouteWithError:(NSError * _Nonnull)error;
@end


/// The <code>NavigationViewControllerDelegate</code> provides methods for configuring the map view shown by a <code>NavigationViewController</code> and responding to the cancellation of a navigation session.
SWIFT_PROTOCOL_NAMED("NavigationViewControllerDelegate")
@protocol MBNavigationViewControllerDelegate
@optional
/// Called when the user exits a route and dismisses the navigation view controller by tapping the Cancel button.
- (void)navigationViewControllerDidCancelNavigation:(MBNavigationViewController * _Nonnull)_;
/// Called when the user arrives at the destination.
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didArriveAt:(id <MGLAnnotation> _Nonnull)destination;
/// Returns whether the navigation view controller should be allowed to calculate a new route.
/// If implemented, this method is called as soon as the navigation view controller detects that the user is off the predetermined route. Implement this method to conditionally prevent rerouting. If this method returns <code>true</code>, <code>navigationViewController(_:willRerouteFrom:)</code> will be called immediately afterwards.
/// \param navigationViewController The navigation view controller that has detected the need to calculate a new route.
///
/// \param location The userâ€™s current location.
///
///
/// returns:
/// True to allow the navigation view controller to calculate a new route; false to keep tracking the current route.
- (BOOL)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController shouldRerouteFromLocation:(CLLocation * _Nonnull)location SWIFT_WARN_UNUSED_RESULT;
/// Called immediately before the navigation view controller calculates a new route.
/// This method is called after <code>navigationViewController(_:shouldRerouteFrom:)</code> is called, simultaneously with the <code>RouteControllerWillReroute</code> notification being posted, and before <code>navigationViewController(_:didRerouteAlong:)</code> is called.
/// \param navigationViewController The navigation view controller that will calculate a new route.
///
/// \param location The userâ€™s current location.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController willRerouteFromLocation:(CLLocation * _Nonnull)location;
/// Called immediately after the navigation view controller receives a new route.
/// This method is called after <code>navigationViewController(_:willRerouteFrom:)</code> and simultaneously with the <code>RouteControllerDidReroute</code> notification being posted.
/// \param navigationViewController The navigation view controller that has calculated a new route.
///
/// \param route The new route.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didRerouteAlongRoute:(MBRoute * _Nonnull)route;
/// Called when the navigation view controller fails to receive a new route.
/// This method is called after <code>navigationViewController(_:willRerouteFrom:)</code> and simultaneously with the <code>RouteControllerDidFailToReroute</code> notification being posted.
/// \param navigationViewController The navigation view controller that has calculated a new route.
///
/// \param error An error raised during the process of obtaining a new route.
///
- (void)navigationViewController:(MBNavigationViewController * _Nonnull)navigationViewController didFailToRerouteWithError:(NSError * _Nonnull)error;
/// Returns an <code>MGLStyleLayer</code> that determines the appearance of the route line.
/// If this method is unimplemented, the navigation map view draws the route line using an <code>MGLLineStyleLayer</code>.
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLStyleLayer</code> that determines the appearance of the route lineâ€™s casing.
/// If this method is unimplemented, the navigation map view draws the route lineâ€™s casing using an <code>MGLLineStyleLayer</code> whose width is greater than that of the style layer returned by <code>navigationMapView(_:routeStyleLayerWithIdentifier:source:)</code>.
- (MGLStyleLayer * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView routeCasingStyleLayerWithIdentifier:(NSString * _Nonnull)identifier source:(MGLSource * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLShape</code> that represents the path of the route line.
/// If this method is unimplemented, the navigation map view represents the route line using an <code>MGLPolylineFeature</code> based on <code>route</code>â€™s <code>coordinates</code> property.
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView shapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
/// Returns an <code>MGLShape</code> that represents the path of the route lineâ€™s casing.
/// If this method is unimplemented, the navigation map view represents the route lineâ€™s casing using an <code>MGLPolylineFeature</code> identical to the one returned by <code>navigationMapView(_:shapeDescribing:)</code>.
- (MGLShape * _Nullable)navigationMapView:(MBNavigationMapView * _Nonnull)mapView simplifiedShapeDescribing:(MBRoute * _Nonnull)route SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS_NAMED("ProgressBar")
@interface MBProgressBar : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface MBRouteOptions (SWIFT_EXTENSION(MapboxNavigation))
@end

@class NSString;

SWIFT_CLASS_NAMED("RouteStepFormatter")
@interface MBRouteStepFormatter : NSFormatter
- (NSString * _Nullable)stringForObjectValue:(id _Nullable)obj SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)stringFor:(id _Nullable)obj markUpWithSSML:(BOOL)markUpWithSSML SWIFT_WARN_UNUSED_RESULT;
- (BOOL)getObjectValue:(id _Nullable * _Nullable)obj forString:(NSString * _Nonnull)string errorDescription:(NSString * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class AVSpeechSynthesizer;
@class AVSpeechUtterance;

SWIFT_CLASS_NAMED("RouteVoiceController")
@interface MBRouteVoiceController : NSObject <AVSpeechSynthesizerDelegate>
/// A boolean value indicating whether instructions should be announced by voice or not.
@property (nonatomic) BOOL isEnabled;
/// Volume of audioPlayer. Used only for Polly instructions.
@property (nonatomic) float volume;
/// SSML option which controls at which speed Polly instructions are read.
@property (nonatomic) double instructionVoiceSpeedRate;
/// SSML option that specifies the voice loudness.
@property (nonatomic, copy) NSString * _Nonnull instructionVoiceVolume;
/// <code>regionType</code> specifies what AWS region to use for Polly.
@property (nonatomic) AWSRegionType regionType;
/// Buffer time between announcements. After an announcement is given any announcement given within this <code>TimeInterval</code> will be suppressed.
@property (nonatomic) NSTimeInterval bufferBetweenAnnouncements;
/// <code>identityPoolId</code> is a required value for using AWS Polly voice instead of iOSâ€™s built in AVSpeechSynthesizer.
/// You can get a token here: http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth-aws-identity-for-ios.html
@property (nonatomic, copy) NSString * _Nullable identityPoolId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)suspendNotifications;
- (void)stopVoice;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


SWIFT_CLASS_NAMED("SeparatorView")
@interface MBSeparatorView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class UITraitCollection;
@class UIColor;
@class UIFont;

/// <code>Style</code> is a convenient wrapper for styling the appearance of various interface
/// components throughout the Navigation UI.
SWIFT_CLASS_NAMED("Style")
@interface MBStyle : NSObject
@property (nonatomic, strong) UITraitCollection * _Nonnull traitCollection;
/// Initializes a style that will be applied for any system traits of an
/// interfaceâ€™s environment.
- (nonnull instancetype)init;
/// Initializes a style for a specific system trait(s) of an interfaceâ€™s
/// environment.
- (nonnull instancetype)initWithTraitCollection:(UITraitCollection * _Nonnull)traitCollection OBJC_DESIGNATED_INITIALIZER;
/// General styling
/// <code>tintColor</code> is used for guidance arrow, highlighted text, progress bar and
/// more.
@property (nonatomic, strong) UIColor * _Nullable tintColor;
/// <code>primaryTextColor</code> sets the color for titles and other prominent information.
@property (nonatomic, strong) UIColor * _Nullable primaryTextColor;
/// <code>secondaryTextColor</code> sets the color for subtitles and other subtle
/// information.
@property (nonatomic, strong) UIColor * _Nullable secondaryTextColor;
/// <code>buttonTextColor</code> sets the text color on buttons for normal state.
@property (nonatomic, strong) UIColor * _Nullable buttonTextColor;
/// <code>lineColor</code> sets the color of dividers and separators.
@property (nonatomic, strong) UIColor * _Nullable lineColor;
/// Maneuver view (Page view)
/// \code
/// `maneuverViewBackgroundColor` sets the background color of the maneuver
/// view, positioned at the top.
///
/// \endcode
@property (nonatomic, strong) UIColor * _Nullable maneuverViewBackgroundColor;
/// Table view (Drawer)
/// \code
/// `headerBackgroundColor` sets the color of the drawer header, positioned at
/// the bottom.
///
/// \endcode
@property (nonatomic, strong) UIColor * _Nullable headerBackgroundColor;
/// <code>cellTitleLabelFont</code> sets the font of the title labels in table views.
@property (nonatomic, strong) UIFont * _Nullable cellTitleLabelFont;
/// <code>cellTitleLabelTextColor</code> sets the title text color in table views.
@property (nonatomic, strong) UIColor * _Nullable cellTitleLabelTextColor;
/// <code>cellSubtitleLabelFont</code> sets the font of the subtitle label in table views.
@property (nonatomic, strong) UIFont * _Nullable cellSubtitleLabelFont;
/// <code>cellSubtitleLabelTextColor</code> sets the text color of the subtitle label in
/// table views.
@property (nonatomic, strong) UIColor * _Nullable cellSubtitleLabelTextColor;
/// <code>wayNameTextColor</code> sets the color for the current way name label.
@property (nonatomic, strong) UIColor * _Nullable wayNameTextColor;
/// <code>wayNameLabelFont</code> sets the font of the current way name label.
@property (nonatomic, strong) UIFont * _Nullable wayNameLabelFont;
/// <code>defaultStyle</code> returns the default style for Mapbox Navigation SDK.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) MBStyle * _Nonnull defaultStyle;)
+ (MBStyle * _Nonnull)defaultStyle SWIFT_WARN_UNUSED_RESULT;
/// Applies the style for all changed properties.
- (void)apply;
@end


SWIFT_CLASS_NAMED("StyleKitArrows")
@interface MBStyleKitArrows : NSObject
/// / Drawing Methods
+ (void)drawArrow180WithScale:(CGFloat)scale;
+ (void)drawArrow45WithScale:(CGFloat)scale;
+ (void)drawArrow30WithScale:(CGFloat)scale;
+ (void)drawArrow0WithScale:(CGFloat)scale;
+ (void)drawArrow75WithScale:(CGFloat)scale;
+ (void)drawArriverightWithScale:(CGFloat)scale;
+ (void)drawArriveWithScale:(CGFloat)scale;
+ (void)drawStartingWithScale:(CGFloat)scale;
+ (void)drawDestinationWithScale:(CGFloat)scale;
+ (void)drawMergeWithScale:(CGFloat)scale;
+ (void)drawRoundaboutWithScale:(CGFloat)scale;
+ (void)drawForkWithScale:(CGFloat)scale;
+ (void)drawOfframpWithScale:(CGFloat)scale;
+ (void)drawRoundabout_180WithScale:(CGFloat)scale;
+ (void)drawRoundabout_45WithScale:(CGFloat)scale;
+ (void)drawRoundabout_315WithScale:(CGFloat)scale;
+ (void)drawRoundabout_275WithScale:(CGFloat)scale;
+ (void)drawRoundabout_90WithScale:(CGFloat)scale;
+ (void)drawLane_straight;
+ (void)drawLane_right_h;
+ (void)drawLane_straight_right;
+ (void)drawLane_right_only;
+ (void)drawLane_straight_only;
+ (void)drawLane_uturn;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SubtitleLabel")
@interface MBSubtitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("TitleLabel")
@interface MBTitleLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MBRouteStep;

SWIFT_CLASS_NAMED("TurnArrowView")
@interface MBTurnArrowView : UIView
@property (nonatomic, strong) MBRouteStep * _Nullable step;
@property (nonatomic) BOOL isStart;
@property (nonatomic) BOOL isEnd;
- (void)drawRect:(CGRect)rect;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(MapboxNavigation))
@end


@interface UIColor (SWIFT_EXTENSION(MapboxNavigation))
@end


@interface UIFont (SWIFT_EXTENSION(MapboxNavigation))
@end


@interface UIView (SWIFT_EXTENSION(MapboxNavigation))
@end


SWIFT_CLASS_NAMED("WayNameLabel")
@interface MBWayNameLabel : MBStylableLabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
